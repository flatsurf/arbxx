# See https://github.com/conda/conda-build/issues/2666 for the missing tag
{% set version = environ.get('GIT_DESCRIBE_TAG', 'untagged')|string|replace('-','_') %}
# conda-smithy assumes that the build number is >= 1000 when building with the new anaconda compilers,
# this probably is not important but make_build_number otherwise complains during the build
{% set build_number = (environ.get('GIT_DESCRIBE_NUMBER')|int + 1000)|string %}
{% set build_string = "master_" + build_number %}

package:
  name: libexactreal
  version: {{ version }}

source:
  git_url: {{ environ.get('FEEDSTOCK_ROOT', '..') }}

build:
  number: {{ build_number }}
  string: {{ build_string }}
  # e-antic is not available on Windows yet
  skip: True  # [win]
  # e-antic is not available on macOS yet
  skip: True  # [osx]

# The dependencies of the above build:script section
requirements:
  build:
    - libtool
    - automake
    - {{ compiler('cxx') }}
    # requirements for ASV benchmarks
    - git
    # requirements for clang-format
    - clangdev ==8.0.0
  host:
    # compile-time dependencies of libexactreal
    - boost-cpp
    - e-antic 1.*
    - arb
    - gmp
    # enable test/pyexactreal tests in ./configure
    - python *
    - pytest
    - cppyy
    - pyeantic
    # enable test/libexactreal tests in ./configure
    - gtest
    - benchmark
    # enable check-valgrind in ./configure
    - valgrind
    # requirements for ASV benchmarks
    - asv

outputs:
  - name: libexactreal
    skip: True   # [build_flavour != 'release']
    script: install-libexactreal.sh
    requirements:
      build:
        # Add compiler as a build dependency again so we get a proper hash for this package.
        - {{ compiler('cxx') }}
      host:
        - {{ pin_compatible('e-antic', exact=True) }}
    run_exports:
      # We pin the version of libexactreal exactly since we do not want to
      # bother with incompatibilities in our nightly builds.
      - {{ pin_subpackage('libexactreal', exact=True) }}

  - name: pyexactreal
    skip: True   # [build_flavour != 'release']
    build:
      noarch: python
    script: install-python.sh
    requirements:
      host:
        - python
        - setuptools
      run:
        # We pin the version of libexactreal exactly since we do not want to
        # bother with incompatibilities in our nightly builds.
        - {{ pin_subpackage('libexactreal', exact=True) }}
        - cppyy
        - pyeantic
        - python
        - boost-cpp
    test:
      imports:
        - pyexactreal

about:
  home: https://github.com/flatsurf/exact-real
  license: GPL2
  license_file: COPYING
  summary: Finite Real Submodules powered by E-ANTIC

extra:
  recipe-maintainers:
    - saraedum
    - videlec
